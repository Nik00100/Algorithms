package training.algo1_0.task1.metro;

/*На некоторых кросс-платформенных станциях метро (как, например, «Третьяковская») на разные стороны платформы приходят
поезда разных направлений. Таня договорилась встретиться с подругой на такой станции, но поскольку подруга приехала из
другого часового пояса, то из-за джетлага сильно проспала, и Тане пришлось долго её ждать. Поезда всегда ходят точно
по расписанию, и Таня знает, что поезд стоит на платформе ровно одну минуту, а интервал между поездами (время, в течение
которого поезда у платформы нет) составляет a минут для поездов на первом пути и b минут для поездов на втором пути.
То есть на первый путь приезжает поезд и стоит одну минуту, затем в течение a минут поезда у платформы нет, затем в течение
одной минуты у платформы стоит следующий поезд и т. д.

Пока Таня стояла на платформе, она насчитала n поездов на первом пути и m поездов на втором пути. Определите минимальное и
максимальное время, которое Таня могла провести на платформе, или сообщите, что она точно сбилась со счёта.

Все поезда, которые видела Таня, она наблюдала в течение всей минуты, то есть Таня не приходит и не уходит с платформы посередине
той минуты, когда поезд стоит на платформе.

Формат ввода
Первая строка входных данных содержит число a — интервал между поездами на первом пути. Вторая строка содержит
число b — интервал между поездами на втором пути. Третья строка содержит число n — количество поездов на первом пути,
которые увидела Таня. Четвёртая строка содержит число m — количество поездов на втором пути, которые увидела Таня.
Все числа — целые, от 1 до 1000.

Формат вывода
Программа должна вывести два числа: минимальное и максимальное время в минутах, которое Таня могла стоять на платформе,
или одно число -1, если Таня точно ошиблась.

Пример 1
Ввод	Вывод
1
3
3
2
5 7
Пример 2
Ввод	Вывод
1
5
1
2
-1

Для первого пути пояснение ниже (пример для трех поездов), аналогично для второго.
<       a        >     <       a        >     <       a        >    <       a        >
                   |п| __________________ |п| __________________ |п|
                       <                  min                   >
<                                         max                                        >
Для пути1  min1 = (n-1)*a + n = (n-1)*(a+1)
Для пути1  max1 = min1 + 2*a = (n-1)*(a+1) + 2*a

Для двух путей min = max(min1,min2) и max = min(max1,max2). Если max < min, то неверно и возвращаем -1

*/

import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        int a = Integer.parseInt(reader.readLine());
        int b = Integer.parseInt(reader.readLine());
        int n = Integer.parseInt(reader.readLine());
        int m = Integer.parseInt(reader.readLine());

        int min1 = a*(n-1) + n;
        int min2 = b*(m-1) + m;

        int max1 = min1 + 2*a;
        int max2 = min2 + 2*b;

        int min = Math.max(min1,min2);
        int max = Math.min(max1,max2);

        if (min > max)
            System.out.println(-1);
        else
            System.out.println(min+" "+max);

        reader.close();
    }
}
