package ya_training.algo3_0.task4_27_02.task3;

/*Дана прямоугольная доска N × M (N строк и M столбцов). В левом верхнем углу находится шахматный конь, которого
необходимо переместить в правый нижний угол доски. В данной задаче конь может перемещаться на две клетки вниз и одну клетку
вправо или на одну клетку вниз и две клетки вправо.

Необходимо определить, сколько существует различных маршрутов, ведущих из левого верхнего в правый нижний угол.

Формат ввода
Входной файл содержит два натуральных числа N и M , .

Формат вывода
В выходной файл выведите единственное число — количество способов добраться конём до правого нижнего угла доски.

Пример 1
Ввод	Вывод
3 2
1
Пример 2
Ввод	Вывод
31 34
293930*/

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[][] dp = new int[n][m];
        dp[0][0] = 1;
        for (int i = 1; i < n; i++) {
            for (int j = 1; j < m; j++) {
                if (i - 2 >= 0 && j - 1 >= 0) {
                    dp[i][j] += dp[i - 2][j - 1];
                }
                if (i - 1 >= 0 && j - 2 >= 0) {
                    dp[i][j] += dp[i - 1][j - 2];
                }

            }
        }
        System.out.println(dp[n - 1][m - 1]);

        sc.close();
    }
}
