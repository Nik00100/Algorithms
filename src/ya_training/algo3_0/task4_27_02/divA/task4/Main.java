package ya_training.algo3_0.task4_27_02.divA.task4;

/*При организации движения по сложным перекресткам, для того, чтобы траектории водителей, выполняющих различные маневры не
пересекались, вводят ограничения на возможные маневры водителей, в зависимости от того, по какой полосе движения водитель
подъехал к перекрестку. Для этого используется знак «движение по полосам».

Рассмотрим дорогу, подходящую к перекрестку, на котором сходится m дорог. Водитель, подъезжающий к перекрестку по этой дороге,
потенциально может продолжить свое движение в m различных направлениях — обратно по дороге, по которой он приехал, а также
по одной из оставшихся m - 1 дорог. Пронумеруем возможные направления числами от 1 до m слева направо с точки зрения подъезжающего
водителя, номер 1 получит разворот и возврат по дороге, по которой водитель подъезжал к перекрестку, номер 2 — поворот на самую
левую из дорог, и т. д.

Пусть дорога содержит n полос для движения. Пронумеруем полосы от 1 до n слева направо, самая левая полоса получит номер 1,
следующая номер 2, и т. д. Знак «движение по полосам» разрешает каждой из полос движение по некоторым из m возможных направлений.
При этом должны выполняться следующие условия:

если с i-й полосы разрешено движение в a-м направлении, а с j-й полосы — в b-м направлении, причем i < j, то a ≤ b;
с каждой полосы разрешено движение хотя бы в одном направлении;
в каждом направлении разрешено движение хотя бы с одной полосы.
Инспекция по безопасности дорожного движения заинтересовалась, а сколько различных знаков «движение по полосам» можно установить
перед таким перекрестком. Помогите им найти ответ на этот вопрос.

Формат ввода
Входной файл содержит два целых числа: m и n (2 ≤ m ≤ 50, 1 ≤ n ≤ 15).

Формат вывода
В выходной файл выведите одно число — количество возможных знаков «движение по полосам», которые можно установить перед перекрестком.

Пример
Ввод	Вывод
4 2
7

Примечания
В примере возможны следующие варианты знаков «движение по полосам»:
С левой полосы - С правой полосы
разворот - разворот, налево, прямо, направо
разворот - налево, прямо, направо
разворот, налево - налево, прямо, направо
разворот, налево - прямо, направо
разворот, налево, прямо - прямо, направо
разворот, налево, прямо - направо
разворот, налево, прямо, направо - направо
*/

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        long[][] dp = new long[n][m];
        dp[0][0] = 1L;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (i == n - 1 && j == m - 1) {
                    continue;
                }
                if (i + 1 < n) {
                    dp[i + 1][j] += dp[i][j];
                }
                if (i + 1 < n && j + 1 < m) {
                    dp[i + 1][j + 1] += dp[i][j];
                }
                if (j + 1 < m) {
                    dp[i][j + 1] += dp[i][j];
                }
            }
        }
        System.out.println(dp[n - 1][m - 1]);

        scanner.close();
    }
}

