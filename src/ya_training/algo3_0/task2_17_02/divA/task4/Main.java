package ya_training.algo3_0.task2_17_02.divA.task4;

/*Фирма OISAC выпустила новую версию калькулятора. Этот калькулятор берет с пользователя деньги за совершаемые арифметические
операции. Стоимость каждой операции в долларах равна 5% от числа, которое является результатом операции. На этом калькуляторе
требуется вычислить сумму N натуральных чисел (числа известны). Нетрудно заметить, что от того, в каком порядке мы будем складывать
эти числа, иногда зависит, в какую сумму денег нам обойдется вычисление суммы чисел (тем самым оказывается нарушен классический
 принцип “от перестановки мест слагаемых сумма не меняется”).

Например, пусть нам нужно сложить числа 10, 11, 12 и 13. Тогда если мы сначала сложим 10 и 11 (это обойдется нам в 1.05 €),
потом результат с 12 (1.65 €), и затем с 13 (2.3 €), то всего мы заплатим 5 €, если же сначала отдельно сложить 10 и 11 (1.05 €),
 потом 12 и 13 (1.25 €) и, наконец, сложить между собой два полученных числа (2.3 €), то в итоге мы заплатим лишь 4.6 €.
  Напишите программу, которая будет определять, за какую минимальную сумму денег можно найти сумму данных N чисел.

Формат ввода
Первая строка входных данных содержит число N (2 ≤ N ≤ 105). Во второй строке заданы N натуральных чисел, каждое из которых
не превосходит 10000.

Формат вывода
Определите, сколько денег нам потребуется на нахождения суммы этих N чисел. Результат должен быть выведен с двумя знаками
после десятичной точки.

Пример 1
Ввод	Вывод
4
10 11 12 13
4.60
Пример 2
Ввод	Вывод
2
1 1
0.10
*/

import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new FileReader("input.txt"));
        PrintWriter writer = new PrintWriter(new FileWriter("output.txt"));

        PriorityQueue<Double> numbers = new PriorityQueue<>();

        int n = Integer.parseInt(reader.readLine());

        String[] s = reader.readLine().split(" ");
        for (int i = 0; i < n; ++i) {
            double number = Double.parseDouble(s[i]);
            numbers.offer(number);
        }

        double cost = 0;
        while (numbers.size() > 1) {
            double first = numbers.poll();
            double second = numbers.poll();
            double sum = first + second;
            cost += sum;
            numbers.offer(sum);
        }

        writer.printf("%.2f", cost * 0.05);
        writer.close();
    }
}
