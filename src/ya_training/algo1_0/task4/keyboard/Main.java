package ya_training.algo1_0.task4.keyboard;

/*На региональном этапе Всероссийской олимпиады школьников по информатике в 2009 году предлагалась следующая задача.

Всем известно, что со временем клавиатура изнашивается,и клавиши на ней начинают залипать. Конечно, некоторое время такую
клавиатуру еще можно использовать, но для нажатий клавиш приходиться использовать большую силу.

При изготовлении клавиатуры изначально для каждой клавиши задается количество нажатий,которое она должна выдерживать.
Если знать эти величины для используемой клавиатуры,то для определенной последовательности нажатых клавиш можно определить,
какие клавиши в процессе их использования сломаются, а какие — нет.

Требуется написать программу, определяющую, какие клавиши сломаются в процессе заданного варианта эксплуатации клавиатуры.

Формат ввода
Первая строка входных данных содержит целое число n (1 ≤ n ≤ 1000) —количество клавиш на клавиатуре. Вторая строка содержит n
целых чисел —с1, с2, … , сn, где сi (1 ≤ ci ≤ 100000) — количество нажатий,выдерживаемых i-ой клавишей. Третья строка содержит
целое число k (1 ≤ k ≤ 100000) — общее количество нажатий клавиш, и последняя строка содержит k целых чисел pj (1 ≤ pj ≤ n) —
последовательность нажатых клавиш.

Формат вывода
Программа должна вывести n строк, содержащих информацию об исправности клавиш.Если i-я клавиша сломалась, то i-ая строка должна
содержать слово YES,если же клавиша работоспособна — слово NO.

Пример
Ввод
5
1 50 3 4 3
16
1 2 3 4 5 1 3 3 4 5 5 5 5 5 4 5
Вывод
YES
NO
NO
NO
YES*/
import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(reader.readLine());
        int[] quantity = new int[n];
        String[] r = reader.readLine().split(" ");
        for (int i=0; i<n; i++) {
            quantity[i] = Integer.parseInt(r[i]);
        }

        Map<Integer, Integer> map = new HashMap<>();
        int k = Integer.parseInt(reader.readLine());
        String[] s = reader.readLine().split(" ");
        for (int i=0; i<k; i++) {
            map.put(Integer.parseInt(s[i]), map.getOrDefault(Integer.parseInt(s[i]),0) + 1);
        }

        for (int i=0; i<n; i++) {
            if (quantity[i] >= map.getOrDefault(i+1,0)) {
                System.out.println("NO");
            } else {
                System.out.println("YES");
            }
        }

        reader.close();
    }
}
