package test_kontur.sandbox.premier_league_partial;

/*C. Премьер-лига
ограничение по времени на тест 1 секунда
ограничение по памяти на тест 256 мегабайт

Завершается чемпионат Российской футбольной премьер-лиги. Сыграны все матчи, кроме последнего. В последнем матче команда A принимает у себя дома команду B. От результата этого матча может зависеть, какое место займёт команда A по итогам чемпионата.

Определите, на каком месте закончит чемпионат команда A в случае победы, ничьей или поражения в своём последнем матче.

По правилам футбола, если матч заканчивается победой одной из команд, то победившая команда получает три очка, а проигравшая — ноль очков. Если матч заканчивается ничьей, то обе команды получают по одному очку. Команды ранжируются в турнирной таблице в порядке убывания набранных очков, в случае равенства очков у двух и более команд они ранжируются по алфавиту.

Входные данные
В первой строке записано целое число n — количество команд в премьер-лиге (2≤n≤20). В следующих n строках приводится положение
команд в турнирной таблице до того, как состоялся последний матч, в формате «название команды» «количество набранных очков».
Названия команд имеют длину от 3 до 12 и состоят только из заглавных латинских букв. Гарантируется, что команды в таблице
упорядочены по убыванию количества очков, а при равенстве очков — по алфавиту. Названия всех команд различны.
Количество очков каждой команды лежит в пределах от 0 до 99.

Распределение очков между командами не обязательно описывает ситуацию, возможную в реальности — в рамках данной задачи не нужно
обращать внимание на это и проверять входные данные на корректность.

В последней строке входных данных написано, какой матч ещё не сыгран. Его описание имеет формат «название команды A»-«название команды B». Названия команд A и B различны и присутствуют в турнирной таблице.

Выходные данные
Выведите три целых числа через пробел — на каком месте закончит чемпионат команда A в случае победы, ничьей или поражения в матче с командой B.

Система оценки
В этой задаче две группы тестов.

Первая группа тестов стоит 5 баллов, для тестов в ней разница между командами A и B в турнирной таблице превышает три очка.

Вторая группа тестов стоит 5 балла, для тестов в ней разница между командами A и B в турнирной таблице может быть произвольной.

Примеры
входные данные
7
ZENIT 65
SOCHI 56
DINAMO 53
CSKA 50
KRASNODAR 49
LOKOMOTIV 48
AKHMAT 41
KRASNODAR-AKHMAT
выходные данные
4 5 5

входные данные
2
ARGENTINA 5
JAMAICA 0
ARGENTINA-JAMAICA
выходные данные
1 1 1*/

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        Map<String, Integer> teams = new HashMap<>();
        for (int i = 0; i < n; i++) {
            String name = scanner.next();
            int points = scanner.nextInt();
            teams.put(name, points);
        }
        String match = scanner.next();
        String[] parts = match.split("-");
        String teamA = parts[0];
        String teamB = parts[1];

        // Считаем, сколько очков наберет команда A в случае победы, ничьи и поражения
        int pointsA = teams.get(teamA);
        int pointsB = teams.get(teamB);
        int pointsAwin = pointsA + 3;
        int pointsDraw = pointsA + 1;
        int pointsAlose = pointsA;

        // Считаем, сколько команд опередит команда A в каждом из трех случаев
        int placeAwin = 1;
        int placeDraw = 1;
        int placeAlose = 1;
        for (String team : teams.keySet()) {
            if (team.equals(teamA)) {
                continue;
            }
            int points = teams.get(team);
            if (points > pointsAwin || (points == pointsAwin && team.compareTo(teamA) < 0)) {
                placeAwin++;
            }
            if (points > pointsDraw || (points == pointsDraw && team.compareTo(teamA) < 0)) {
                placeDraw++;
            }
            if (points > pointsAlose || (points == pointsAlose && team.compareTo(teamA) < 0)) {
                placeAlose++;
            }
        }

        // Выводим результаты
        System.out.println(placeAwin + " " + placeDraw + " " + placeAlose);
    }
}
